Контейнеризация и Docker
""""""""""""""""""""""""""""

**Контейнеризация** (виртуализация на уровне операционной системы, контейнерная виртуализация, зонная виртуализация) — метод виртуализации, при котором ядро операционной системы поддерживает несколько изолированных экземпляров пространства пользователя вместо одного. Эти экземпляры (обычно называемые контейнерами или зонами) с точки зрения выполняемых в них процессов идентичны отдельному экземпляру операционной системы.  Ядро обеспечивает полную изолированность контейнеров, поэтому программы из разных контейнеров не могут воздействовать друг на друга.

В отличие от аппаратной виртуализации, при которой эмулируется аппаратное окружение и может быть запущен широкий спектр гостевых операционных систем, в контейнере может быть запущен экземпляр операционной системы только с тем же ядром, что и у хостовой операционной системы (все контейнеры узла используют общее ядро). При этом при контейнеризации отсутствуют дополнительные ресурсные накладные расходы на эмуляцию виртуального оборудования и запуск полноценного экземпляра операционной системы, характерные при аппаратной виртуализации.

Существуют реализации, ориентированные на создание практически полноценных экземпляров операционных систем (Solaris Containers, контейнеры Virtuozzo, OpenVZ), так и варианты, фокусирующиеся на изоляции отдельных сервисов с минимальным операционным окружением (jail, Docker).

**Docker** — программное обеспечение для автоматизации развёртывания и управления приложениями в средах с поддержкой контейнеризации, контейнеризатор приложений. Позволяет «упаковать» приложение со всем его окружением и зависимостями в контейнер, который может быть развёрнут на любой Linux-системе с поддержкой контрольных групп в ядре, а также предоставляет набор команд для управления этими контейнерами.
Разрабатывается и поддерживается одноимённой компанией-стартапом, распространяется в двух редакциях — общественной (Community Edition) по лицензии Apache 2.0 и для организаций (Enterprise Edition) по проприетарной лицензии. Написан на языке Go.

Подробнее: https://ru.wikipedia.org/wiki/Docker

Контейнерная платформа Docker всегда работает поверх операционной системы хоста. Контейнеры содержат двоичные файлы, библиотеки и само приложение. Контейнеры не содержат гостевой операционной системы, которая обеспечивает легкий вес контейнеров.
Напротив, виртуальные машины работают на гипервизоре (отвечает за запуск виртуальных машин) и включают собственную гостевую операционную систему. Это значительно увеличило размер виртуальных машин, усложнило настройку виртуальных машин и потребовало больше ресурсов для запуска каждой виртуальной машины.

.. figure:: img/docker_01.png
       :scale: 100 %
       :align: center
       :alt: asda


Docker используется с целью получения работоспособных приложений, совместимого со всеми популярными операционными системами. Конфигурация приложения собирается автоматически и код выполняется всегда, даже при отсутствии необходимого окружения и установленного программного обеспечения.


Image (Изображения)
~~~~~~~~~~~~~~~~~~~~~~~
Образ Docker содержит все необходимое для запуска приложения в качестве контейнера. Это включает в себя:

* библиотеки кода
* среды выполнения переменные
* среды файлы конфигурации
  
Затем образ может быть развернут в любой среде Docker и выполнен в виде контейнера. Docker имеет различные образы ПО: ubuntu, php (который наследуется от оригинального образа Ubuntu), nodejs, и т.д.

.. note:: Image - это шаблон 

Контейнер
~~~~~~~~~~~~~~

Контейнер Docker - это экземпляр образа во время выполнения. Из одного изображения вы можете создать несколько контейнеров (все под управлением примера приложения) на нескольких платформах Docker. Контейнер выполняется как отдельный процесс на главной машине. Поскольку контейнер запускается без необходимости загрузки гостевой операционной системы, он имеет небольшой вес и ограничивает ресурсы (например, память), необходимые для его запуска.


Установка Docker
""""""""""""""""""""""

Docker доступен для любой из операционных систем: Windows, Linux, Maс.

**Centos:**

::

        yum install docker

