Переменные
~~~~~~~~~~~

Ansible использует переменные для управления различиями между системами.  С помощью Ansible можно выполнять задачи в разных системах с помощью одной команды. 

Переменной может быть, например:

- информация об устройстве, которая собрана как факт, а затем используется в шаблоне.
- в переменные можно записывать полученный вывод команды.
- переменная может быть указана вручную в playbook

Имена переменных
"""""""""""""""""

В Ansible есть определенные ограничения по формату имен переменных:

- Переменные могут состоять из букв, чисел и символа _
- Переменные должны начинаться с буквы

Где можно определять переменные
""""""""""""""""""""""""""""""""
Переменные можно создавать:

- в инвентарном файле
- в playbook
- в специальных файлах для группы/устройства
- в отдельных файлах, которые добавляются в playbook через include (как в Jinja2)
- можно передавать переменные при вызове playbook

Также можно использовать факты, которые были собраны про устройство, как переменные.

Переменные в инвентарном файле
""""""""""""""""""""""""""""""
В инвентарном файле можно указывать переменные для группы:

::

  [br_net]
  192.168.0.1
  192.168.0.10
  
  [br_net:vars]
  dns = 10.10.10.10
  log_server = 192.168.0.2

Переменные **dns** и **log_server** можно применять в playbooks для всех устройств из группы **br_net**

Имена переменных в playbook заключаются в двойные фигурные скобки **{{dns}}**

Пример:
"""""""
Создать playbook для добавления dns сервера c IP адресом 10.10.10.10 на устройствах в сети br_net

::

    - name: Set DNS-server
      hosts: br_net
    
      tasks: 
        - name: insert line into resolv.conf
          ansible.builtin.lineinfile:
              path: /etc/resolv.conf
              line: nameserver {{dns}}
              state: present

В данном случае в файл /etc/resolv.conf будет добавлена строка nameserver 10.10.10.10. То есть вместо {{dns}} будет взято значение этой переменной, которые было описано в инвентарном файле.

Переменные в playbook
""""""""""""""""""""""""
Самый простой способ использования переменных - это определить переменную, используя одно значение в файле playbook YAML. 

Пример playbook, который выводит сообщение в стандартный вывод.

.. figure:: img/var_01.png
       :scale: 100 %
       :align: center
       :alt: 

Определение переменной начинается с блока vars, за которым следует имя переменной и соответствующее ей значение. В этом примере greetings - это имя переменной, а Hello everyone! - присвоенное ей значение.

Чтобы ссылаться на значение переменной, необходимо заключить переменную в двойные фигурные скобки как таковую {{ greetings }}.

Когда playbook выполняется, осуществляется доступ к значению переменной и оно выводится в стандартный вывод, за которым следует остальная часть строки.


.. figure:: img/var_02.png
       :scale: 100 %
       :align: center
       :alt:   

Переменные Ansible с массивами
"""""""""""""""""""""""""""""""

Как и в языках программирования, где массивы используются для хранения набора элементов одного типа данных, в Ansible массивы используются для определения переменных с несколькими значениями.

Массивы определяются с использованием приведенного синтаксиса.

.. figure:: img/var_03.png
       :scale: 100 %
       :align: center
       :alt:

Как и в языках программирования, для перебора элементов массива или многомерного массива используются циклы. Они используются для упрощения выполнения повторяющихся задач, которые могут быть утомительными и отнимать много времени.

В Ansible используются циклы **loop**

**Пример:**

Установить на все хосты пакеты NetworkManager-tui, bind-utils

.. figure:: img/var_06.png
       :scale: 100 %
       :align: center
       :alt:

Директива **loop** выполняет итерацию по всему списку имен, определенных в цикле, и сохраняет каждое имя в переменной с именем **item**. Переменная ссылается на каждый из элементов в цикле. Таким образом, playbook устанавливает пакеты с меньшим количеством строк кода и позволяет избежать повторяющихся блоков кода.

Переменные в отдельных yaml-файлах
"""""""""""""""""""""""""""""""""""

Для достижения гибкости в работе ansible можно размещать переменные в отдельных файлах и покдключать к playbook по мере необходимости.

Подключение файла с переменными вы полняется в playbook следующим образом:

::

   - name: Example External Variables file
     hosts: all
     vars_files:
        - variables.yml         

**Пример:**

Заполнить файл **/etc/hosts** на всех узлах сведениями о некоторых  IP адресах устройств сетевой инфраструктуры:

- BR-RTR: 192.168.0.1
- BR-SRV: 192.168.0.2
- BR-CLI: 192.168.0.10

1. Подготовка файла с переменными.

   1) Создать файл *variables.yaml* для хранения словаря с именами хостов и IP адресами.
   2) Заполнить его следующим образом:


.. figure:: img/var_07.png
       :scale: 100 %
       :align: center
       :alt:

В данном случае создан словарь **insert_etc_host**, содержащий список из трех словарей, в каждом из которых в качестве ключа представлен параметр, заносимый в /etc/host и его значение

    3)   Создать playbook insert_etc_hosts.yaml следующего содержания:

.. figure:: img/var_07.png
       :scale: 100 %
       :align: center
       :alt:


